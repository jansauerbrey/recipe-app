name: CI/CD Pipeline
permissions:
  contents: read
  pull-requests: write
on:
  push:
    branches: [master]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x
      
      - name: Install dependencies
        run: |
          npm ci
      
      - name: Run ESLint
        run: |
          deno lint

  test:
    needs: lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
        mongodb-version: ['6.0']

    steps:
      - name: Git checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Setup Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x

      - name: Cache Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.deno
            ~/.cache/deno
          key: ${{ runner.os }}-deno-${{ hashFiles('**/deno.lock') }}
          restore-keys: ${{ runner.os }}-deno-

      - name: Setup MongoDB
        uses: supercharge/mongodb-github-action@1.11.0
        with:
          mongodb-version: ${{ matrix.mongodb-version }}
          mongodb-replica-set: test-rs
          mongodb-port: 27018

      - name: Install Dependencies
        run: npm ci

      - name: Create Upload Directory
        run: mkdir -p upload

      - name: Run Tests
        env:
          MONGODB_URI: mongodb://127.0.0.1:27018/recipe_app_test?replicaSet=test-rs
          MONGO_DB_NAME: recipe_app_test
          PORT: 3000
          ENVIRONMENT: development
          JWT_SECRET: test-jwt-secret-for-ci
          JWT_EXPIRATION: 3600
          RATE_LIMIT_MAX: 100
          RATE_LIMIT_WINDOW: 60000
          RATE_LIMIT_WINDOW_MS: 900000
          RATE_LIMIT_MAX_REQUESTS: 100
          MAX_FILE_SIZE: 5242880
          ALLOWED_FILE_TYPES: image/jpeg,image/png,image/gif
          UPLOAD_DIR: ./upload
          CORS_ORIGINS: http://localhost:3000
          LOG_LEVEL: info

        run:
          deno task test:coverage
      
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: jansauerbrey/recipe-app
          files: coverage.lcov
          flags: deno

  security:
    needs: [test, lint]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      # Known issue: Medium severity in inflight@1.0.6 (transitive dependency)
      # Running with continue-on-error until a fix is available
      - name: Run npm audit
        run: npm audit
        continue-on-error: true

      # Known issue: Medium severity in inflight@1.0.6 (transitive dependency)
      # No direct upgrade available as it's deep in bcrypt's dependency tree
      # TODO: Monitor for updates and upgrade when available
      - name: Run Snyk Security Scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        continue-on-error: true

  build-frontend:
    needs: [test, security, lint]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'yarn'

      - name: Install Frontend Dependencies
        run: |
          cd frontend/web
          yarn install

      - name: Build Frontend
        run: |
          cd frontend/web
          yarn build

      - name: Upload Frontend Build
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/web/build

  build-android:
    needs: [test, security, lint]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install dependencies
        run: npm ci

      - name: Install Android SDK
        uses: android-actions/setup-android@v2

      - name: Build Android
        run: |
          mkdir -p www  # Create www directory that Capacitor expects
          npm run cap:sync
          cd android
          ./gradlew assembleDebug

      - name: Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: android/app/build/outputs/apk/debug/app-debug.apk

  deploy:
    needs: [build-frontend]
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Clean public directory
        run: |
          rm -rf public/*
          
      - name: Setup Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x
          
      - name: Download Frontend Build
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: public
          
      - name: Deploy to Deno Deploy
        uses: denoland/deployctl@v1
        env:
          DENO_DEPLOY_TOKEN: ${{ secrets.DENO_DEPLOY_TOKEN }}
        with:
          project: recipe-app
          entrypoint: app.ts
          include: |
            app.ts
            deno.json
            import_map.json
            src/business/**/*
            src/data/**/*
            src/openapi/**/*
            src/presentation/**/*
            src/types/**/*
            src/utils/**/*
            public/**/*

  release:
    needs: [build-android, deploy]
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Download APK
        uses: actions/download-artifact@v4
        with:
          name: app-debug

      # Using GitHub run number for versioning instead of npm version
      - name: Set Version
        run: |
          echo "Using GitHub run number ${{ github.run_number }} for versioning"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release v${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./app-debug.apk
          asset_name: app-debug.apk
          asset_content_type: application/vnd.android.package-archive
