angular.module("app.auth",["ui.router"]).factory("User",["$resource","BASE_URI",function(e,r){return e(r+"api/user/info/:id",null,{update:{method:"PUT"}})}]).factory("UserService",["$localStorage","$injector",function(e,r){var t={currentUser:{},currentUserCopy:{},languageOptions:[{id:"en",name:"English"},{id:"de",name:"Deutsch"},{id:"fi",name:"Suomi"}],weekdayOptions:[{id:0,name:"Sunday"},{id:1,name:"Monday"},{id:2,name:"Tueasday"},{id:3,name:"Wednesday"},{id:4,name:"Thursday"},{id:5,name:"Friday"},{id:6,name:"Saturday"}]},n=function(r){t.currentUser=r,t.currentUserCopy=angular.copy(t.currentUser),e.user=r},o=function(){return t.currentUser},s=function(){delete t.currentUser,delete t.currentUserCopy,delete e.user},a=function(){return angular.isObject(t.currentUser)&&"_id"in t.currentUser},i=function(){return t.currentUser&&t.currentUser.token?t.currentUser.token:void 0},u=function(e,r,t){var n,s,i=0,u=o(),c=a(),l=[],d=!0;if(t=t||0,e===!0&&void 0===u)i=1;else if(e!==!0||c!==!0||void 0!==r&&0!==r.length){if(r){for(c===!1&&(u={permissions:["NoUser"]}),l=[],angular.forEach(u.permissions,function(e){l.push(e.toLowerCase())}),s=0;s<r.length;s+=1)if(n=r[s].toLowerCase(),1===t){if(d=d&&l.indexOf(n)>-1,d===!1)break}else if(0===t&&(d=l.indexOf(n)>-1))break;i=d?0:2}}else i=0;return i},c=function(r){void 0!==t.currentUser&&(t.currentUser.favoriteRecipes=r,t.currentUserCopy=angular.copy(t.currentUser),e.user.favoriteRecipes=r)},l=function(e){if(void 0!==t.currentUser){var n=r.get("User");n.update({id:t.currentUser._id},{fullname:t.currentUserCopy.fullname,settings:t.currentUserCopy.settings},function(r){for(var n in r)t.currentUser[n]=r[n];t.currentUserCopy=angular.copy(t.currentUser),e()})}};return e.user&&n(e.user),{data:t,createUser:n,getCurrentLoginUser:o,deleteCurrentUser:s,isAuthenticated:a,getToken:i,authorize:u,updateFavoriteRecipes:c,updateUserSettings:l}}]).factory("AuthenticationService",["$http","$localStorage","$state","$stateParams","$rootScope","UserService","BASE_URI","AlertService",function(e,r,t,n,o,s,a,i){var u=function(r,n,o){void 0!==r&&void 0!==n?e.post(a+"api/user/login",{username:r,password:n,autologin:o}).success(function(e){e.permissions=["User"],e.is_admin&&e.permissions.push("Admin"),s.createUser(e),t.go("user.home")}).error(function(e){i.add("danger","Network or certificate error")}):i.add("danger"," Please fill out username and password.")},c=function(){e.get(a+"api/user/logout").success(function(){s.deleteCurrentUser(),i.add("success","You hav been successfully loged out."),t.go("anon.startpage")}).error(function(){i.add("danger","Network connection error."),t.go(o.previousState.name,o.previousStateParams)})},l=function(r){e.post(a+"api/user/register",r).success(function(){i.add("success"," Please check your email to confirm your address and to activate your account."),t.go("anon.user.login")}).error(function(e){i.add("danger","Network or certificate error.")})},d=function(){n&&n.token&&e.get(a+"api/user/confirm/"+n.token).success(function(e){i.add("success","Email has been successfully confirmed. You are now able to login with your credentials."),t.go("anon.user.login")}).error(function(e){i.add("danger","Network or certificate error.")})},g=function(r){return void 0!==r?e.post(a+"api/user/forgot",{username:r}).success(function(e){i.add("success","Password renewal process has been started. Please check your email for further instructions."),t.go("anon.user.login")}):void i.add("danger","Please enter username.")},p=function(r,o){return void 0!==r&&r===o?e.put(a+"api/user/reset/"+n.token,{password:r,passwordConfirmation:o}).success(function(e){i.add("success","Password has been reset successfully. Please use the new password to login."),t.go("anon.user.login")}):void i.add("danger","Please enter the same password into password and password confirmation.")};return{logIn:u,logOut:c,register:l,confirmEmail:d,requestNewPassword:g,resetPassword:p}}]).factory("TokenInterceptor",["$q","UserService","$injector","AlertService",function(e,r,t,n){return{request:function(e){return e.headers=e.headers||{},r.isAuthenticated()===!0&&(e.headers.Authorization="AUTH "+r.getToken()),e},requestError:function(r){return e.reject(r)},response:function(r){return null!=r&&200==r.status,r||e.when(r)},responseError:function(o){if(null!=o&&401===o.status){r.deleteCurrentUser(),n.add("danger","Access denied!");var s=t.get("$state");s.go("anon.startpage")}return e.reject(o)}}}]).controller("UserAuthenticationController",["$scope","Users","AuthenticationService","UserService",function(e,r,t,n){e.languageOptions=n.data.languageOptions,e.weekdayOptions=n.data.weekdayOptions,e.user=new r,e.logIn=function(){t.logIn(e.login.username,e.login.password,e.login.autologin)},e.register=function(){t.register(e.user)}}]).controller("UserConfirmEmailController",["AuthenticationService",function(e){e.confirmEmail()}]).controller("UserLogoutController",["AuthenticationService",function(e){e.logOut()}]).controller("UserPasswordRenewalController",["$scope","AuthenticationService",function(e,r){e.requestNewPassword=function(e){r.requestNewPassword()},e.resetPassword=function(e,t){r.resetPassword()}}]).controller("UserSettingsController",["$scope","$state","UserService","AlertService",function(e,r,t,n){e.languageOptions=t.data.languageOptions,e.weekdayOptions=t.data.weekdayOptions,t.data.currentUserCopy=angular.copy(t.data.currentUser),e.user=t.data.currentUserCopy,e.updateUserSettings=function(){t.updateUserSettings(function(){n.add("success","Settings successfully updated."),r.go("user.settings")})}}]).config(["$httpProvider",function(e){e.interceptors.push("TokenInterceptor")}]).config(["$stateProvider","$urlRouterProvider",function(e,r){e.state("anon.user.register",{url:"/register",templateUrl:"partials/user.register.tpl.html",controller:"UserAuthenticationController",data:{title:"Register"}}).state("anon.user.confirm",{url:"/confirm/:token",controller:"UserConfirmEmailController",data:{title:"Confirm Email"}}).state("anon.user.login",{url:"/login",templateUrl:"partials/user.login.tpl.html",controller:"UserAuthenticationController",data:{title:"Login"}}).state("user.logout",{url:"/user/logout",views:{main:{template:'<div class="loading-indicator overlay"><div class="loading-indicator-body"><div class="spinner"><double-bounce-spinner></double-bounce-spinner></div></div></div>',controller:"UserLogoutController"}},data:{title:"Logout"}}).state("anon.forgot",{url:"/user/forgot",templateUrl:"partials/user.forgot.tpl.html",controller:"UserPasswordRenewalController",data:{title:"Forgot password"}}).state("anon.reset",{url:"/user/reset/:token",templateUrl:"partials/user.reset.tpl.html",controller:"UserPasswordRenewalController",data:{title:"Reset password"}}).state("user.settings",{url:"/user/settings",views:{main:{templateUrl:"partials/user.settings.view.tpl.html",controller:"UserSettingsController"},"actionnavigation-xs@":{template:'<button type="button" class="navbar-toggle actionbutton" ui-sref="user.settings.edit"><i class="glyphicon glyphicon-pencil"></i></button>'}},data:{title:"User settings"}}).state("user.settings.edit",{url:"/edit",views:{"main@user":{templateUrl:"partials/user.settings.edit.tpl.html",controller:"UserSettingsController"},"actionnavigation-xs@":{template:'<button type="button" class="navbar-toggle actionbutton" ng-click="updateUserSettings()"><i class="glyphicon glyphicon-floppy-disk"></i></button>',controller:"UserSettingsController"}}})}]);